name: Pull request synchronized
on:
  pull_request:
    types:
      - synchronize
jobs:
  trigger-premerge:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'go')
    steps:
      - uses: buildkite/trigger-pipeline-action@v2.1.0
        with:
          buildkite_api_access_token: ${{ secrets.TRIGGER_BK_BUILD_TOKEN }}
          pipeline: "ray-project/premerge"
          branch: ${{ github.event.pull_request.head.ref }}
          build_env_vars: '{"TRIGGERED_FROM_GHA": "true"}'
          commit: ${{ github.event.pull_request.head.sha }}

  disable-automerge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const prQuery = `query PullRequest($owner: String!, $repo: String!, $pullRequestNumber: Int!) {
              repository(owner: $owner, name: $repo) {
                pullRequest(number: $pullRequestNumber) {
                  id
                  autoMergeRequest {
                    enabledAt
                  }
                }
              }
            }`;
            const prVariables = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pullRequestNumber: context.issue.number
            }
            const prResult = await github.graphql(prQuery, prVariables)
            if (!prResult.repository.pullRequest.autoMergeRequest) {
              console.log('Auto merge is not enabled')
              return
            }
            const automergeQuery = `mutation DisablePullRequestAutoMerge($pullRequestId: ID!) {
              disablePullRequestAutoMerge(input: {pullRequestId: $pullRequestId}) {
                pullRequest {
                  id
                }
              }
            }`;
            const automergeVariables = {
              pullRequestId: prResult.repository.pullRequest.id
            }
            const result = await github.graphql(automergeQuery, automergeVariables)
            console.log(result)
